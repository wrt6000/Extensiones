/* ========================================================================
 * Copyright 2014 monitor
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 monitor

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.monitor.member.master.persistence.entity;

import co.edu.uniandes.csw.monitor.sport.persistence.entity.SportEntity;
import co.edu.uniandes.csw.monitor.member.persistence.entity.MemberEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(MembersportsEntityId.class)
@NamedQueries({
    @NamedQuery(name = "MembersportsEntity.getByMasterId", query = "SELECT  u FROM MembersportsEntity u WHERE u.memberId=:memberId"),
    @NamedQuery(name = "MembersportsEntity.deleteMembersportsEntity", query = "DELETE FROM MembersportsEntity u WHERE u.memberId=:memberId and  u.sportsId=:sportsId")
})
public class MembersportsEntity implements Serializable {

    @Id
    @Column(name = "memberId")
    private Long memberId;
    @Id
    @Column(name = "sportsId")
    private Long sportsId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "memberId", referencedColumnName = "id")
    @JoinFetch
    private SportEntity memberIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "sportsId", referencedColumnName = "id")
    @JoinFetch
    private SportEntity sportsIdEntity; 

    public MembersportsEntity() {
    }

    public MembersportsEntity(Long memberId, Long sportsId) {
        this.memberId =memberId;
        this.sportsId = sportsId;
    }

    public Long getMemberId() {
        return memberId;
    }

    public void setMemberId(Long memberId) {
        this.memberId = memberId;
    }

    public Long getSportsId() {
        return sportsId;
    }

    public void setSportsId(Long sportsId) {
        this.sportsId = sportsId;
    }

    public SportEntity getMemberIdEntity() {
        return memberIdEntity;
    }

    public void setMemberIdEntity(SportEntity memberIdEntity) {
        this.memberIdEntity = memberIdEntity;
    }

    public SportEntity getSportsIdEntity() {
        return sportsIdEntity;
    }

    public void setSportsIdEntity(SportEntity sportsIdEntity) {
        this.sportsIdEntity = sportsIdEntity;
    }

}
