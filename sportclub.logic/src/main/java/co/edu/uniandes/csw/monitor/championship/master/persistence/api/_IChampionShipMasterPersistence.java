/* ========================================================================
 * Copyright 2014 monitor
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 monitor

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.monitor.championship.master.persistence.api;

import co.edu.uniandes.csw.monitor.championship.master.persistence.entity.ChampionShipprizeEntity;
import co.edu.uniandes.csw.monitor.prize.logic.dto.PrizeDTO;
import co.edu.uniandes.csw.monitor.championship.master.persistence.entity.ChampionShiprecordsEntity;
import co.edu.uniandes.csw.monitor.record.logic.dto.RecordDTO;
import co.edu.uniandes.csw.monitor.championship.master.persistence.entity.ChampionShipstadiumsEntity;
import co.edu.uniandes.csw.monitor.stadium.logic.dto.StadiumDTO;
import co.edu.uniandes.csw.monitor.championship.master.persistence.entity.ChampionShiprefereesEntity;
import co.edu.uniandes.csw.monitor.referee.logic.dto.RefereeDTO;
import co.edu.uniandes.csw.monitor.championship.master.persistence.entity.ChampionShipsecondaryRefereesEntity;
import co.edu.uniandes.csw.monitor.referee.logic.dto.RefereeDTO;
import co.edu.uniandes.csw.monitor.championship.master.logic.dto.ChampionShipMasterDTO;
import java.util.List;

public interface _IChampionShipMasterPersistence {

	public ChampionShipMasterDTO getChampionShip(Long championshipId);
	
	
    public ChampionShipprizeEntity createChampionShipprizeEntity(ChampionShipprizeEntity entity);
    public void deleteChampionShipprizeEntity(Long championShipId, Long prizeId);
    public List<PrizeDTO> getChampionShipprizeEntityList(Long championShipId);
    public ChampionShiprecordsEntity createChampionShiprecordsEntity(ChampionShiprecordsEntity entity);
    public void deleteChampionShiprecordsEntity(Long championShipId, Long recordsId);
    public List<RecordDTO> getChampionShiprecordsEntityList(Long championShipId);
    public ChampionShipstadiumsEntity createChampionShipstadiumsEntity(ChampionShipstadiumsEntity entity);
    public void deleteChampionShipstadiumsEntity(Long championShipId, Long stadiumsId);
    public List<StadiumDTO> getChampionShipstadiumsEntityList(Long championShipId);
    public ChampionShiprefereesEntity createChampionShiprefereesEntity(ChampionShiprefereesEntity entity);
    public void deleteChampionShiprefereesEntity(Long championShipId, Long refereesId);
    public List<RefereeDTO> getChampionShiprefereesEntityList(Long championShipId);
    public ChampionShipsecondaryRefereesEntity createChampionShipsecondaryRefereesEntity(ChampionShipsecondaryRefereesEntity entity);
    public void deleteChampionShipsecondaryRefereesEntity(Long championShipId, Long secondaryRefereesId);
    public List<RefereeDTO> getChampionShipsecondaryRefereesEntityList(Long championShipId);
   
  
}
